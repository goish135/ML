import csv
import numpy as np
from numpy.linalg import inv
import random
import math
import sys

data = []
for i in range(18):
	data.append([])


n_row = 0
text = open('train.csv','r',encoding='big5')
row = csv.reader(text,delimiter=",")
for r in row:
	if n_row != 0 :
		for i in range(3,27):
			if r[i]!="NR":
				data[(n_row-1)%18].append(float(r[i]))
			else:
				data[(n_row-1)%18].append(float(0))
	n_row = n_row+1

x = []
y = []
# 12 months
for i in range(12):
    # 10 hours continue : 471 
    for j in range(471):
        x.append([])
        # 18 dirty
        for t in range(18):
            # 9 hours continue
            for s in range(9):
                x[471*i+j].append(data[t][480*i+j+s] )
        y.append(data[9][480*i+j+9])
        
#print(y[0]) # 30 - correct
#print(x[0][:9]) # 14 14 14 13 12 12 12 12  15 - correct
#print(x[0][1:10]) # 14 14 13 12 12 12 12 15 1.8 - correct

x = np.array(x)
y = np.array(y)

# add square term
# x = np.concatenate((x,x**2), axis=1)

# add bias
x = np.concatenate((np.ones((x.shape[0],1)),x), axis=1)

#init weight & other hyperparams
w = np.zeros(len(x[0]))
l_rate = 10
repeat = 10000
text.close()
x_t = x.transpose()
s_gra = np.zeros(len(x[0]))

#start training
for i in range(repeat):
    hypo = np.dot(x,w)
    loss = hypo - y
    cost = np.sum(loss**2) / len(x)
    cost_a  = math.sqrt(cost)
    gra = np.dot(x_t,loss)
    s_gra += gra**2
    ada = np.sqrt(s_gra)
    w = w - l_rate * gra/ada
    print ('iteration: %d | Cost: %f  ' % ( i,cost_a))
